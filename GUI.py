
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import DISABLED, Tk, Canvas, Entry, Text, Button, PhotoImage
import tkinter
from tkinter.font import NORMAL
from tkinter.messagebox import showinfo

"""import webbrowser, os
path="C:/Users"
webbrowser.open(os.path.realpath(path))"""

from tkinter import filedialog as fd

#root = tkinter.Tk()

# ABM_num = {'val': 0}
# pl_num = {'val': 0}
# wd_num = {'val': 0}

def select_ABM():
    filetypes = (('text files', '*.txt*'),('All files', '*.*'))
    ABM_filename = fd.askopenfilename(title='Open a file', initialdir='/', filetypes=filetypes)
    #ABM_num = {'val': 1}
    #showinfo(title='Selected File', message=ABM_filename)
    canvas.create_text(
    125.0,
    270.0,
    anchor="nw",
    text=ABM_filename,
    fill="#1E1E1E",
    font=("Inter Medium", 10 * -1)
    )
    #return ABM_num

def select_page_line():
    filetypes = (('text files', '*.txt*'),('All files', '*.*'))
    pl_filename = fd.askopenfilename(title='Open a file', initialdir='/', filetypes=filetypes)
    #pl_num = {'val': 1}
    #showinfo(title='Selected File', message=pl_filename)
    canvas.create_text(
    125.0,
    364.0,
    anchor="nw",
    text=pl_filename,
    fill="#1E1E1E",
    font=("Inter Medium", 10 * -1)
    )
    #return pl_num

def select_wd():
    filetypes = (('text files', '*.txt*'),('All files', '*.*'))
    wd_filename = fd.askopenfilename(title='Open a file', initialdir='/', filetypes=filetypes)
    #wd_num = {'val': 1}
    #showinfo(title='Selected File', message=wd_filename)
    canvas.create_text(
    431.0,
    270.0,
    anchor="nw",
    text=wd_filename,
    fill="#1E1E1E",
    font=("Inter Medium", 10 * -1)
    )
    #return wd_num

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("794x489")
window.configure(bg = "#FFFFFF")


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 489,
    width = 794,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    0.0,
    0.0,
    794.0,
    489.0,
    fill="#FFFFFF",
    outline="")

canvas.create_text(
    641.0,
    7.0,
    anchor="nw",
    text="Data Base Version",
    fill="#1E1E1E",
    font=("Inter Medium", 16 * -1)
)

canvas.create_text(
    641.0,
    51.0,
    anchor="nw",
    text="Update Data Base",
    fill="#1E1E1E",
    font=("Inter Medium", 16 * -1)
)

canvas.create_text(
    228.0,
    123.0,
    anchor="nw",
    text=" Part Replacement",
    fill="#1E1E1E",
    font=("Inter Medium", 40 * -1)
)

canvas.create_text(
    125.0,
    207.0,
    anchor="nw",
    text="Load ABM",
    fill="#1E1E1E",
    font=("Inter Medium", 20 * -1)
)

canvas.create_text(
    125.0,
    300.0,
    anchor="nw",
    text="Load page & line",
    fill="#1E1E1E",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    431.0,
    206.0,
    anchor="nw",
    text="Select working directory",
    fill="#1E1E1E",
    font=("Inter", 20 * -1)
)

canvas.create_text(
    431.0,
    304.0,
    anchor="nw",
    text="Enable Debug",
    fill="#1E1E1E",
    font=("Inter", 20 * -1)
)

canvas.create_rectangle(
    266.0,
    64.0,
    273.0,
    64.0,
    fill="#FFFFFF",
    outline="")

Cadence_image = PhotoImage(
    file=relative_to_assets("cadence.png"))
Cadence = Button(
    image=Cadence_image,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("Cadence clicked"),
    relief="flat"
)
Cadence.place(
    x=266.0,
    y=64.0,
    width=273.0,
    height=64.0
)

canvas.create_rectangle(
    0.0,
    0.0,
    200.0,
    50.0,
    fill="#000000",
    outline="")

NGC_image = PhotoImage(
    file=relative_to_assets("NGC.png"))
NGC = Button(
    image=NGC_image,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("NGC clicked"),
    relief="flat"
)
NGC.place(
    x=0.0,
    y=0.0,
    width=235.0,
    height=70.0
)

def button_1_clicked():
        button_1.config(image = button_image_1_no)
        button_7.config(image = button_image_7)
        button_6.config(image = button_image_6_blue)
        button_6.config(state = NORMAL)

button_image_1 = PhotoImage(file=relative_to_assets("no.png"))
button_image_1_no = PhotoImage(file=relative_to_assets("no_green.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: [button_1_clicked(), print("button_1 clicked")],
    relief="flat"
)
button_1.place(
    x=652.0,
    y=306.0,
    width=76.0,
    height=32.0
)
def button_2_clicked():
        button_2.config(image = button_image_2_no)
        button_8.config(image = button_image_8)

button_image_2 = PhotoImage(
    file=relative_to_assets("no.png"))
button_image_2_no = PhotoImage(
    file=relative_to_assets("no_green.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: [button_2_clicked(),print("button_2 clicked")],
    relief="flat"
)
button_2.place(
    x=710.0,
    y=74.0,
    width=76.0,
    height=32.0
)

canvas.create_rectangle(
    662.0,
    29.0,
    758.0,
    51.0,
    fill="#E1E1E1",
    outline="")

canvas.create_text(
    691.0,
    30.0,
    anchor="nw",
    text="Date",
    fill="#000000",
    font=("Inter", 16 * -1)
)

button_image_3 = PhotoImage(
    file=relative_to_assets("browse.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: [select_wd(), print("button_3 clicked")],
    relief="flat"
)
button_3.place(
    x=431.0,
    y=237.0,
    width=76.0,
    height=32.0
)

canvas.create_text(
    438.0,
    235.0,
    anchor="nw",
    text="Browse",
    fill="#000000",
    font=("Inter", 16 * -1)
)

button_image_4 = PhotoImage(
    file=relative_to_assets("browse.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: [select_ABM(), print("button_4 clicked")],
    relief="flat"
)
button_4.place(
    x=125.0,
    y=237.0,
    width=76.0,
    height=32.0
)

canvas.create_text(
    145.0,
    235.0,
    anchor="nw",
    text="Browse",
    fill="#000000",
    font=("Inter", 16 * -1)
)

button_image_5 = PhotoImage(
    file=relative_to_assets("browse.png"))
button_5 = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: [select_page_line(), print("button_5 clicked")],
    relief="flat"
)
button_5.place(
    x=125.0,
    y=332.0,
    width=76.0,
    height=32.0
)

canvas.create_text(
    145.0,
    330.0,
    anchor="nw",
    text="Browse",
    fill="#000000",
    font=("Inter", 16 * -1)
)

# def ready(ABM, pl, wd):
#     if ABM['val'] == 1 and pl['val'] == 1 and wd['val'] == 1:
#         button_6.config(image = button_image_6_blue)

'''ABM = tkinter.StringVar(root)
pl = tkinter.StringVar(root)
wd = tkinter.StringVar(root)

def myfunction(*args):
    x = ABM.get()
    y = pl.get()
    z = wd.get()
    if x and y and z:
        button_6.config(state='normal')
    else:
        button_6.config(state='disabled')

ABM.trace("w", myfunction)
pl.trace("w", myfunction)
wd.trace("w", myfunction)'''

button_image_6 = PhotoImage(file=relative_to_assets("generate_script.png"))
button_image_6_blue = PhotoImage(file=relative_to_assets("generate_script_blue.png"))
button_6 = Button(
    image=button_image_6,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_6 clicked"),
    relief="flat",
    state = DISABLED
)
button_6.place(
    x=307.0,
    y=389.0,
    width=179.0,
    height=57.0
)

def button_7_clicked():
        button_7.config(image = button_image_7_yes)
        button_1.config(image = button_image_1)
        button_6.config(image = button_image_6_blue)
        button_6.config(state = NORMAL)

button_image_7 = PhotoImage(file=relative_to_assets("yes.png"))
button_image_7_yes = PhotoImage(file=relative_to_assets("yes_green.png"))
button_7 = Button(
    image=button_image_7,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: [button_7_clicked(), print("button_7 clicked")],
    relief="flat"
)
button_7.place(
    x=569.0,
    y=306.0,
    width=76.0,
    height=32.0
)
def button_8_clicked():
        button_8.config(image = button_image_8_yes)
        button_2.config(image = button_image_2)

button_image_8 = PhotoImage(file=relative_to_assets("yes.png"))
button_image_8_yes = PhotoImage(file=relative_to_assets("yes_green.png"))
button_8 = Button(
    image=button_image_8,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: [button_8_clicked(), print("button_8 clicked") ],
    relief="flat"
)

button_8.place(
    x=627.0,
    y=74.0,
    width=76.0,
    height=32.0
)

window.resizable(False, False)
window.mainloop()